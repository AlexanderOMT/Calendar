/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package design;
import SqlDatabase.HerokuCalendarPermitSqlConnection;
import SqlDatabase.HerokuCalendarSqlConnection;
import SqlDatabase.HerokuInvitationSqlConnection;
import SqlDatabase.HerokuUsersSqlConnection;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import model.ButtonCalendar;
import model.Invitation;

/**
 *
 * @author Leyre
 */
public class Notification extends javax.swing.JDialog implements usuario{

    /**
     * Creates new form Notification
     */
    private int posxb1=570;
    private int posxb2=635;
    private int posy=10;
    private int posxtext=10;
    private int posytext=10;
    private ArrayList<Invitation> invitations; //lista local de las invitaciones
    private MainPage mn = new MainPage();
    HerokuUsersSqlConnection conex_user= new HerokuUsersSqlConnection();
    HerokuCalendarSqlConnection conex_cal= new HerokuCalendarSqlConnection();
    HerokuCalendarPermitSqlConnection conex_cal_per= new HerokuCalendarPermitSqlConnection();
    HerokuInvitationSqlConnection conex_invite= new HerokuInvitationSqlConnection();
    
    public Notification(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
        getNotifications();
    }
    
    public Notification(MainPage main) throws SQLException{
        initComponents();
        this.mn=main;
        Color color = new Color(36,47,35);
        this.getContentPane().setBackground(color);
        this.setLocationRelativeTo(null);
        getNotifications();
        close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(242, 236, 191));

        jLabel1.setFont(new java.awt.Font("Rockwell", 0, 25)); // NOI18N
        jLabel1.setText("You have received an invitation!");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 754, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //metodo que se encargarÃ¡ de cargar las invitaciones pendientes
    public void loadNotifications() throws SQLException{
        jPanel2.removeAll();
        jPanel2.updateUI();
        jPanel2.revalidate();
        
        if(invitations.size() >0){ //revisar la necesidad de este if!!!!
            ButtonCalendar aux= new ButtonCalendar();
            int posyb1relative=15;
            int posyb2relative=15;
            int posytextorelative=10;
            for (int x=0; x<invitations.size(); x++){
                Invitation invite=invitations.get(x);
                if(invite == null)
                    System.out.println("invitacion es null");
                //1.conseguir correo de origin_user
                String correo=conex_user.getEmailByUserId(invite.getOrigin_user());
                //2. conseguir nombre del calendario
                String nombre_cal=conex_cal.getCalendarNameById(invite.getCalendar_id());
                //3.frase <correo> te ha invitado a unirte a <nombre de calendario>
                String frase_notificacion=correo + " te ha invitado a unirte a " + nombre_cal;

                JButton accept= aux.createButtonNotification(posxb1, posyb1relative);
                JButton decline= aux.createButtonNotification(posxb2, posyb2relative);
                JScrollPane text = aux.createTextFieldNotification(posxtext,posytextorelative, frase_notificacion);
                accept.setBackground(new Color(1011322298));decline.setText("Decline");accept.setText("Join");
                    jPanel2.add(accept); jPanel2.add(decline); jPanel2.add(text);
                    posyb1relative+=60;
                    posyb2relative+=60;
                    posytextorelative+=60;

            //ACCIONES PARA LOS BOTONES DE ACEPTAR Y RECHAZAR
                accept.addActionListener((java.awt.event.ActionEvent e) -> {
                    invitations.remove(invite);
                    try {
                        loadNotifications();
                    } catch (SQLException ex) {
                        Logger.getLogger(Notification.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //eliminar de la base de datos
                    conex_invite.replyInvitation(invite.getInvitation_id(), 1);
                    conex_cal_per.insertCalendarPermitTaskNull(userSigned.getId(), invite.getCalendar_id(), invite.getRol());
                    
                });

                decline.addActionListener((java.awt.event.ActionEvent e) -> {
                    invitations.remove(invite);
                    try {
                        loadNotifications();
                    } catch (SQLException ex) {
                        Logger.getLogger(Notification.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //eliminar de la base de datos
                    conex_invite.replyInvitation(invite.getInvitation_id(), 0);
                });
            }
        
        }
    }
    
    
    
    public void getNotifications() throws SQLException{
        //conseguir todas las invitaciones sin responder
        System.out.println(userSigned.getId()+ "ES EL IDE DEL USER SIGNED");
        invitations = conex_invite.getAllInvitationIdByUserId(userSigned.getId());
        loadNotifications();
    }
       
    public void close(){
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
               reloadMainPage();
            }
        });
    }  
     public void reloadMainPage(){
        this.mn.reload();
    }   
                 
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                Notification dialog = new Notification(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Notification.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
