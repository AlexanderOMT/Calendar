package design;

import SqlDatabase.HerokuCalendarPermitSqlConnection;
import SqlDatabase.HerokuCalendarSqlConnection;
import SqlDatabase.HerokuTaskSqlConnection;
import SqlDatabase.HerokuUsersSqlConnection;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import model.User;

/**
 *
 * @author Leyre
 */
public class InputCalendarName extends javax.swing.JDialog implements usuario{

    /**
     * Creates new form InputCalendarName
     */
    private int id_cal_recien_creado;
    private boolean calendarExist=false;
    public User userSignedIn;
    private boolean help=false;
    
    public InputCalendarName(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public InputCalendarName(){
        initComponents();
        Color color = new Color(255,255,255);
        this.getContentPane().setBackground(color);
        setModal(true);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        calendarName = new javax.swing.JTextField();
        AddCalendar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        AddCalendar.setBackground(new java.awt.Color(102, 204, 255));
        AddCalendar.setText("Add");
        AddCalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCalendarActionPerformed(evt);
            }
        });
        AddCalendar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AddCalendarKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel1.setText("Enter the name of your calendar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calendarName, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddCalendar, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calendarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public int getIdCalendarCreated(){
        return this.id_cal_recien_creado;
    }
    public boolean getCalendarExists(){
        return this.calendarExist;
    }
    
    public boolean gethelp(){
        return this.help;
    }
    
    private void AddCalendarActionPerformed(java.awt.event.ActionEvent evt) { 
        String CalendarName = this.calendarName.getText();
        HerokuCalendarPermitSqlConnection conex_cal_per = HerokuCalendarPermitSqlConnection.getInstance();
        HerokuCalendarSqlConnection conex_cal = HerokuCalendarSqlConnection.getInstance();
        String new_email_id=CalendarName.trim()+userSignedIn.getEmail();
        /*control para que no se cree otro calendario, si ya existe otro con el mismo id*/
        boolean verdadero=conex_cal.selectCalendarIdBySpecialId(new_email_id);
        if(verdadero == true){
            this.calendarExist=true;
            JOptionPane.showMessageDialog(null, "El calendario no se ha podido crear porque ya existe uno con el mismo nombre");
        }else{
            conex_cal.insertCalendar(CalendarName,new_email_id);
            id_cal_recien_creado=conex_cal.getCalendar(new_email_id);
            if(id_cal_recien_creado >0)
                conex_cal_per.insertCalendarPermitTaskNull(userSignedIn.getId(), id_cal_recien_creado, "Admin");
        }
        this.setVisible(false);
        this.help=true;
    }                                   

    private void AddCalendarKeyPressed(java.awt.event.KeyEvent evt) {                                       
        String CalendarName = calendarName.getText();
        HerokuCalendarPermitSqlConnection conex_cal_per = HerokuCalendarPermitSqlConnection.getInstance();
        HerokuCalendarSqlConnection conex_cal = HerokuCalendarSqlConnection.getInstance();
        String new_email_id=CalendarName+userSignedIn.getEmail();
        conex_cal.insertCalendar(CalendarName,new_email_id);
        id_cal_recien_creado=conex_cal.getCalendar(new_email_id);
        if(id_cal_recien_creado >0)
            conex_cal_per.insertCalendarPermitTaskNull(userSignedIn.getId(), id_cal_recien_creado, "Admin");
           this.setVisible(false);
    }                                      


    
    
    public String getCalendarName(){
        return calendarName.getText();
    }
    
    public int getCalendarId(){
        return id_cal_recien_creado;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputCalendarName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputCalendarName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputCalendarName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputCalendarName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InputCalendarName dialog = new InputCalendarName(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCalendar;
    private javax.swing.JTextField calendarName;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
