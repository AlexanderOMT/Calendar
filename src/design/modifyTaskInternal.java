/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package design;

import SqlDatabase.HerokuCalendarPermitSqlConnection;
import SqlDatabase.HerokuTaskSqlConnection;
import static design.usuario.userSigned;
import java.awt.Color;
import java.sql.Timestamp;
import java.util.Map;
import model.CalendarTask;
import model.Tags;
import model.Task;
import model.User;

/**
 *
 * @author TESTER
 */
public class modifyTaskInternal extends javax.swing.JDialog {

    /**
     * Creates new form modifyTaskInternal
     */
    private User userSignedUpmp;
    private Task taskModify;
    private HerokuTaskSqlConnection conex_task;
    private HerokuCalendarPermitSqlConnection conex_calendarPermit;
    private Timestamp date;
    private CalendarTask actualCalendar;
    private dayView listTasks;
    public modifyTaskInternal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setModal(true);
        this.setLocationRelativeTo(null);
        initComponents();
    }
    
    public modifyTaskInternal(Task t, Timestamp date, CalendarTask actualCalendar, dayView listTasks) {
        this.listTasks = listTasks;
        this.actualCalendar = actualCalendar;
        this.taskModify = t;
        this.date = date;
        initComponents();
        initTags();
        userSignedUpmp=userSigned;
        setModal(true);
        this.setLocationRelativeTo(null);
        changeColor();
    }

    public void changeColor(){
        if(userSignedUpmp.getModo() == 1){
            this.getContentPane().setBackground(Color.decode("#000000"));

            nameField1.setForeground(Color.decode("#FFFFFF"));
            nameField1.setBackground(Color.decode("#000000"));
            descriptionField1.setForeground(Color.decode("#FFFFFF"));
            descriptionField1.setBackground(Color.decode("#000000"));
            jLabel7.setForeground(Color.decode("#FFFFFF"));
            jLabel4.setForeground(Color.decode("#FFFFFF"));

            hourBox1.getEditor().getEditorComponent().setBackground(Color.decode("#000000"));
            hourBox1.getEditor().getEditorComponent().setForeground(Color.decode("#FFFFFF"));
            minBox1.getEditor().getEditorComponent().setBackground(Color.decode("#000000"));
            minBox1.getEditor().getEditorComponent().setForeground(Color.decode("#FFFFFF"));
            jComboBoxTag1.getEditor().getEditorComponent().setBackground(Color.decode("#000000"));
            jComboBoxTag1.getEditor().getEditorComponent().setForeground(Color.decode("#FFFFFF"));
            
            jButton1.setBackground(Color.decode("#859EBC"));
            jButton2.setBackground(Color.decode("#859EBC"));
        }else{
            this.getContentPane().setBackground(Color.decode("#FFFFFF"));
            
            nameField1.setForeground(Color.decode("#000000"));
            nameField1.setBackground(Color.decode("#FFFFFF"));
            descriptionField1.setForeground(Color.decode("#000000"));
            descriptionField1.setBackground(Color.decode("#FFFFFF"));
            jLabel7.setForeground(Color.decode("#000000"));
            jLabel4.setForeground(Color.decode("#000000"));

            hourBox1.getEditor().getEditorComponent().setBackground(Color.decode("#FFFFFF"));
            hourBox1.getEditor().getEditorComponent().setForeground(Color.decode("#000000"));
            minBox1.getEditor().getEditorComponent().setBackground(Color.decode("#FFFFFF"));
            minBox1.getEditor().getEditorComponent().setForeground(Color.decode("#000000"));
            jComboBoxTag1.getEditor().getEditorComponent().setBackground(Color.decode("#FFFFFF"));
            jComboBoxTag1.getEditor().getEditorComponent().setForeground(Color.decode("#000000"));
            
            jButton1.setBackground(Color.decode("#F0F0F0"));
            jButton2.setBackground(Color.decode("#F0F0F0"));
        }       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxTag1 = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        descriptionField1 = new javax.swing.JTextArea();
        nameField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        hourBox1 = new javax.swing.JComboBox<>();
        minBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane5.setBorder(null);

        descriptionField1.setColumns(20);
        descriptionField1.setRows(5);
        descriptionField1.setText("Add a description");
        descriptionField1.setBorder(null);
        descriptionField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                descriptionField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                descriptionField1FocusLost(evt);
            }
        });
        jScrollPane5.setViewportView(descriptionField1);

        nameField1.setText("Add a title");
        nameField1.setBorder(null);
        nameField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameField1FocusLost(evt);
            }
        });
        nameField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameField1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Tag:");

        hourBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        hourBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourBox1ActionPerformed(evt);
            }
        });

        minBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));
        minBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minBox1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Time");

        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(nameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 376, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(hourBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(minBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBoxTag1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(nameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(hourBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTag1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void descriptionField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionField1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionField1FocusGained

    private void descriptionField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionField1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionField1FocusLost

    private void nameField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameField1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_nameField1FocusGained

    private void nameField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameField1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_nameField1FocusLost

    private void nameField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameField1ActionPerformed

    private void hourBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hourBox1ActionPerformed

    private void minBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minBox1ActionPerformed

    // Ok Modify task
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.taskModify.setName(nameField1.getText());
        this.taskModify.setDesc(descriptionField1.getText());
        this.date.setHours(Integer.valueOf(hourBox1.getSelectedItem().toString()));
        this.date.setMinutes(Integer.valueOf(minBox1.getSelectedItem().toString()));
        this.taskModify.setDate(this.date);
        this.taskModify.setTag(jComboBoxTag1.getSelectedItem().toString());
        
        HerokuTaskSqlConnection taskConn = HerokuTaskSqlConnection.getInstance();
        HerokuCalendarPermitSqlConnection con1 = HerokuCalendarPermitSqlConnection.getInstance();
        
        taskConn.deleteTaskById(taskModify.getId());
        taskConn.insertTaskIntoSpecificId(taskModify, taskModify.getId());
        String rol = con1.selectRolfromUser(userSignedUpmp.getId(), this.actualCalendar.getId());
            con1.insertCalendarPermit(userSignedUpmp.getId(), this.actualCalendar.getId(), taskModify.getId(), rol);
            final int idTask = taskModify.getId();
            Map<Integer, String> user_id_rol = con1.selectUsersPermitsByCalendarId(this.actualCalendar.getId());
            user_id_rol.keySet().forEach((id) -> {
                con1.insertCalendarPermit(id, this.actualCalendar.getId(), idTask, user_id_rol.get(id));
            });
        this.listTasks.loadTask();
        this.listTasks.updateDate();
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void initTags() {
        for (Tags myVar : Tags.values()) {
            jComboBoxTag1.addItem(myVar.toString()); 
        }   
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(modifyTaskInternal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(modifyTaskInternal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(modifyTaskInternal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(modifyTaskInternal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                modifyTaskInternal dialog = new modifyTaskInternal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descriptionField1;
    private javax.swing.JComboBox<String> hourBox1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBoxTag1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JComboBox<String> minBox1;
    private javax.swing.JTextField nameField1;
    // End of variables declaration//GEN-END:variables
}
